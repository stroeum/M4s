//
// time: Mon Sep 16 10:00:33 2013
//
// version: 3.2.0 (format), 4.4.4 (DX)
//
//
// Begin MDF
// MODULE MyMinMax
// CATEGORY Macros
// INPUT Min; string; (no default); Value of the min
// INPUT Max; string; (no default); Value of the max
// OUTPUT Minimum; object;  
// OUTPUT Maximum; object;  
// End MDF
// page assignment: MinMax	order=2, windowed=0, showing=1
// workspace: width = 241, height = 388
// layout: snap = 1, width = 5, height = 5, align = CN
//
macro MyMinMax(
 Min
,Max
) -> (
 Minimum
,Maximum
) {
    // 
    // node Input[4]: x = 72, y = 1, inputs = 0, label = Minimum value
    // page group: MinMax
    // parameter: position = 1, name = 'Min', value = '(no default)', descriptive = 1, description = 'Value of the min', required = 0, visible = 1
    //
MyMinMax_Input_4_out_1 = Min;
    // 
    // node Compute[148]: x = 0, y = 71, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "strlen($0)>0"
    // page group: MinMax
    // expression: value = strlen(a)>0
    // name[2]: value = a
    //
MyMinMax_Compute_148_out_1 = 
    Compute(
    "strlen($0)>0",
    MyMinMax_Input_4_out_1
    ) [instance: 148, cache: 1];
    // 
    // node Input[8]: x = 196, y = 1, inputs = 0, label = Maximum value
    // page group: MinMax
    // parameter: position = 2, name = 'Max', value = '(no default)', descriptive = 1, description = 'Value of the max', required = 0, visible = 1
    //
MyMinMax_Input_8_out_1 = Max;
    // 
    // node Compute[159]: x = 124, y = 71, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "strlen($0)>0"
    // page group: MinMax
    // expression: value = strlen(a)>0
    // name[2]: value = a
    //
MyMinMax_Compute_159_out_1 = 
    Compute(
    "strlen($0)>0",
    MyMinMax_Input_8_out_1
    ) [instance: 159, cache: 1];
    // 
    // node Echo[1]: x = 45, y = 326, inputs = 2, label = Echo
    // page group: MinMax
    //
    Echo(
    MyMinMax_Compute_148_out_1,
    MyMinMax_Compute_159_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Parse[1]: x = 69, y = 71, inputs = 2, outputs = 2, label = Parse
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "%f"
    // page group: MinMax
    //
MyMinMax_Parse_1_out_1,
MyMinMax_Parse_1_out_2 = 
    Parse(
    MyMinMax_Input_4_out_1,
    "%f"
    ) [instance: 1, cache: 1];
    // 
    // node Switch[189]: x = 42, y = 141, inputs = 2, label = Switch
    // page group: MinMax
    //
MyMinMax_Switch_189_out_1 = 
    Switch(
    MyMinMax_Compute_148_out_1,
    MyMinMax_Parse_1_out_1
    ) [instance: 189, cache: 1];
    // 
    // node Output[3]: x = 41, y = 206, inputs = 1, label = Minimum
    // page group: MinMax
    // parameter: position = 1, name = 'Minimum', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
Minimum = MyMinMax_Switch_189_out_1;
    // 
    // node Parse[2]: x = 193, y = 71, inputs = 2, outputs = 2, label = Parse
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "%f"
    // page group: MinMax
    //
MyMinMax_Parse_2_out_1,
MyMinMax_Parse_2_out_2 = 
    Parse(
    MyMinMax_Input_8_out_1,
    "%f"
    ) [instance: 2, cache: 1];
    // 
    // node Switch[2]: x = 166, y = 141, inputs = 2, label = Switch
    // page group: MinMax
    //
MyMinMax_Switch_2_out_1 = 
    Switch(
    MyMinMax_Compute_159_out_1,
    MyMinMax_Parse_2_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Output[4]: x = 165, y = 206, inputs = 1, label = Maximum
    // page group: MinMax
    // parameter: position = 2, name = 'Maximum', value = ' ', descriptive = 0, description = ' ', required = 0, visible = 1
    //
Maximum = MyMinMax_Switch_2_out_1;
// network: end of macro body
}
MyMinMax_Input_4_out_1 = NULL;
MyMinMax_Compute_148_out_1 = NULL;
MyMinMax_Input_8_out_1 = NULL;
MyMinMax_Compute_159_out_1 = NULL;
MyMinMax_Parse_1_out_1 = NULL;
MyMinMax_Switch_189_out_1 = NULL;
MyMinMax_Parse_2_out_1 = NULL;
MyMinMax_Switch_2_out_1 = NULL;
